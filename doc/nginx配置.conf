
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
	

	server {
        listen       8095;
		#root D:/shadmin;		
		root D:/code;		
		location ~ /index.php/ {  
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;           
			fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }
		location /  
		{  
			
			index index.php;  				
			 #如果请求既不是一个文件，也不是一个目录，则执行一下重写规则
             if (!-e $request_filename)
             {
                #地址作为将参数rewrite到index.php上。
                rewrite ^/(.*)$ /index.php?s=$1;
                #若是子目录则使用下面这句，将subdir改成目录名称即可。
                #rewrite ^/subdir/(.*)$ /subdir/index.php?s=$1;
             }			
			if ($request_filename !~ (js|css|images|robots/.txt|index/.php.*) ) {  
				rewrite ^/(.*)$ /index.php/$1 last;  
				break;  
			} 			
		}	
		location /api/ {
			index  index.php index.html index.htm;
			 #如果请求既不是一个文件，也不是一个目录，则执行一下重写规则
			 if (!-e $request_filename)
			 {
				#地址作为将参数rewrite到index.php上。
				#rewrite ^/(.*)$ /index.php?s=$1;
				#若是子目录则使用下面这句，将subdir改成目录名称即可。
				rewrite ^/api/(.*)$ /api/index.php?s=$1;
			 }
		}
		location ~* \.(eot|otf|ttf|woff|svg|swf|xml)$ {
			add_header Access-Control-Allow-Origin *;
		}
		location ~* \.(eot|ttf|woff)$ {
                    add_header Access-Control-Allow-Origin *;
		}
		location ~* \/upload\/.+\.(html|php)$ {
			return 404;
		}		
		location ~* ^\/plugins\/.+\.(html|php)$ {
			return 404;
		}		
		location ~* \/themes\/.+\.(html|php)$ {
			return 404;
		}			
    }
server {
    listen 8010;
    root D:/payfronttrunk;
	#root D:/hisale;
    index index.php index.html index.htm;
    # make site accessible from http://localhost/
    server_name localhost;
    location / { 		
        # 对根目录的访问直接重定向到 index.php 上
        rewrite ^/$ /index.php last;
        # 对不是以 / + 指定关键字打头的访问重定向到 index.php 去处理
        rewrite ^/(?!index\.php\b|static\b|dist\b|assets\b|supstatic\b|upload\b|webmis\b|themes\b|public\b|html\b|c\|favicon\.ico\b)(.*)$ /index.php/$1 last;		
    }    
		
    location ~ ^(.+\.php)(.*)$ {
		fastcgi_index    index.php;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
		#fastcgi_param    CI_ENV production; # 指定为生产环境模式
        fastcgi_param    SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        fastcgi_param    PATH_INFO        $fastcgi_path_info;
        fastcgi_param    PATH_TRANSLATED    $document_root$fastcgi_path_info;
        fastcgi_pass    127.0.0.1:9000;
        #fastcgi_pass    unix:/var/run/php5-fpm.sock;
        include    fastcgi_params;
    }
	location /merchant/ {
		#Hide index.php
		if (!-e $request_filename) {
			rewrite ^/merchant/(?!index\.php\b|public\b|upload\b|themes\b)(.*)$ /merchant/index.php last;
		}
	}

	location /agent/ {
		#Hide index.php
		if (!-e $request_filename) {
			rewrite ^/agent/(?!index\.php\b|public\b|upload\b|themes\b)(.*)$ /agent/index.php last;
		}
	}

	location /developer/ {
		#Hide index.php
		if (!-e $request_filename) {
			rewrite ^/developer/(?!index\.php\b|public\b|upload\b|themes\b)(.*)$ /developer/index.php last;
		}   
	}  

	location /api/ {
		#Hide index.php
		if (!-e $request_filename) {
			rewrite ^/api/(?!index\.php\b|public\b|upload\b|themes\b)(.*)$ /api/index.php last;
		}   
	}  
      

}
server {
    listen 90;
    #root D:/payfronttrunk;
	#root D:/hisale;
	root D:/fastphp/public;
    index index.php index.html index.htm;
    # make site accessible from http://localhost/
    server_name localhost;
    location / { 		
        # 对根目录的访问直接重定向到 index.php 上
        rewrite ^/$ /index.php last;
        # 对不是以 / + 指定关键字打头的访问重定向到 index.php 去处理
        rewrite ^/(?!index\.php\b|static\b|dist\b|assets\b|supstatic\b|upload\b|webmis\b|themes\b|public\b|html\b|c\|favicon\.ico\b)(.*)$ /index.php/$1 last;		
    }   
		
    location ~ ^(.+\.php)(.*)$ {
		fastcgi_index    index.php;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
		#fastcgi_param    CI_ENV production; # 指定为生产环境模式
        fastcgi_param    SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        fastcgi_param    PATH_INFO        $fastcgi_path_info;
        fastcgi_param    PATH_TRANSLATED    $document_root$fastcgi_path_info;
        fastcgi_pass    127.0.0.1:9000;
        #fastcgi_pass    unix:/var/run/php5-fpm.sock;
        include    fastcgi_params;
    }

}
server {
    listen 80;
    #root D:/payfronttrunk;
	#root D:/hisale;
	root D:/19kecode/hisale;
    index index.php index.html index.htm;
    # make site accessible from http://localhost/
    server_name localhost;
    location / { 		
        # 对根目录的访问直接重定向到 index.php 上
        rewrite ^/$ /index.php last;
        # 对不是以 / + 指定关键字打头的访问重定向到 index.php 去处理
        rewrite ^/(?!index\.php\b|static\b|dist\b|assets\b|supstatic\b|upload\b|webmis\b|themes\b|public\b|html\b|c\|favicon\.ico\b)(.*)$ /index.php/$1 last;		
    }   
		
    location ~ ^(.+\.php)(.*)$ {
		fastcgi_index    index.php;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
		#fastcgi_param    CI_ENV production; # 指定为生产环境模式
        fastcgi_param    SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        fastcgi_param    PATH_INFO        $fastcgi_path_info;
        fastcgi_param    PATH_TRANSLATED    $document_root$fastcgi_path_info;
        fastcgi_pass    127.0.0.1:9000;
        #fastcgi_pass    unix:/var/run/php5-fpm.sock;
        include    fastcgi_params;
    }
	location /customer/ {
		#Hide index.php
		if (!-e $request_filename) {
			rewrite ^/customer/(?!index\.php\b|public\b|upload\b|themes\b)(.*)$ /customer/index.php last;
		}
	}
	location /api/ {
		#Hide index.php
		if (!-e $request_filename) {
			rewrite ^/api/(?!index\.php\b|public\b|upload\b|themes\b)(.*)$ /api/index.php last;
		}
	}   
	location /admin/ {
		#Hide index.php
		if (!-e $request_filename) {
			rewrite ^/admin/(?!index\.php\b|public\b|upload\b|themes\b)(.*)$ /admin/index.php last;
		}
	}   

}
server {
    listen 800;
    #root D:/shadmin;
	root D:/mygit/data-sales-analysis/code;
    index index.php index.html index.htm;
    # make site accessible from http://localhost/
    server_name localhost;
    location / { 		
        # 对根目录的访问直接重定向到 index.php 上
        rewrite ^/$ /index.php last;
        # 对不是以 / + 指定关键字打头的访问重定向到 index.php 去处理
        rewrite ^/(?!index\.php\b|static\b|dist\b|assets\b|supstatic\b|upload\b|webmis\b|themes\b|public\b|html\b|c\|favicon\.ico\b)(.*)$ /index.php/$1 last;		
    }    
	location ~ .*\.(gif|jpg|jpeg|bmp|png|ico|txt|js|css|ttf|woff|woff2)$ {
		#静态资源转发
		root D:/mygit/data-sales-analysis/code/public/;
		#访问目录时列出文件列表
		autoindex on;
		#expires定义用户浏览器缓存的时间为7天，如果静态页面不常更新，可以设置更长，这样可以节省带宽和缓解服务器的压力
        #expires      7d;
	}
    location ~ ^(.+\.php)(.*)$ {
		fastcgi_index    index.php;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
		#fastcgi_param    CI_ENV production; # 指定为生产环境模式
        fastcgi_param    SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        fastcgi_param    PATH_INFO        $fastcgi_path_info;
        fastcgi_param    PATH_TRANSLATED    $document_root$fastcgi_path_info;
        fastcgi_pass    127.0.0.1:9000;
        #fastcgi_pass    unix:/var/run/php5-fpm.sock;
        include    fastcgi_params;
    }
	location /api/ {
		#Hide index.php
		if (!-e $request_filename) {
			rewrite ^/api/(?!index\.php\b|public\b|upload\b|themes\b)(.*)$ /api/index.php last;
		}   
	}  
      

}
server {
    listen 8080;    
	root D:/19kecode/yunweb;
    index index.php index.html index.htm;
    server_name localhost;
    location / { 		
        # 对根目录的访问直接重定向到 index.php 上
        rewrite ^/$ /index.php last;
        # 对不是以 / + 指定关键字打头的访问重定向到 index.php 去处理
        rewrite ^/(?!index\.php\b|static\b|dist\b|assets\b|supstatic\b|upload\b|webmis\b|themes\b|public\b|html\b|c\|favicon\.ico\b)(.*)$ /index.php/$1 last;		
    }   		
    location ~ ^(.+\.php)(.*)$ {
		fastcgi_index    index.php;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
		#fastcgi_param    CI_ENV production; # 指定为生产环境模式
        fastcgi_param    SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        fastcgi_param    PATH_INFO        $fastcgi_path_info;
        fastcgi_param    PATH_TRANSLATED    $document_root$fastcgi_path_info;
        fastcgi_pass    127.0.0.1:9000;
        #fastcgi_pass    unix:/var/run/php5-fpm.sock;
        include    fastcgi_params;
    }
}

server {
    listen 81;
    root D:/19kecode/hisale;
    index index.php index.html index.htm;
    # make site accessible from http://localhost/
    server_name localhost;
	}
#服务器集群名称为lsq_one
upstream lsq_one {
	#server  192.168.0.5:8099; 
	#server  127.0.0.1:8095; 
	server 127.0.0.1:8080 ;
	server 192.168.0.50:8080 ;
	#ip_hash; #每一个请求按照请求的ip的hash结果分配。这样每一个请求固定落在一个上游服务器，能够解决ip会话在同一台服务器的问题。
	#fair; #按上游服务器的响应时间来分配请求。响应时间短的优先分配。
}
	
server {
    listen 9527;    
	#index index.php index.html index.htm;	
	location /  
	{  		
		rewrite ^/$ /index.php last;	
		#其中lsq_one 对应着upstream设置的集群名称
		proxy_pass      http://lsq_one; 
		#设置主机头和客户端真实地址，以便服务器获取客户端真实IP
		proxy_set_header   Host             $host; 
		proxy_set_header   X-Real-IP        $remote_addr; 
		proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;					
	}	
}

    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
